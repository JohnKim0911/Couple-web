<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="albumMapper">
	
	<resultMap type="Story" id="storyResult">
		<result column="story_no" property="storyNo" />
		<result column="couple_code" property="coupleCode" />
		<result column="nickname" property="writerEmail" />
		<result column="story_title" property="storyTitle" />
		<result column="create_date" property="createDate" />
		<result column="reply_count" property="replyCount" />
		<result column="origin_name" property="originName" />
		<result column="storyPath" property="changeName" />
		<result column="profilepath" property="profileChangeName" />
		<result column="status" property="status" />
	</resultMap>
	
	<resultMap type="Reply" id="replyResult">
		<result column="reply_no" property="replyNo" />
		<result column="ref_sno" property="refStoryNo" />
		<result column="nickname" property="replyWriter" />
		<result column="reply_content" property="replyContent" />
		<result column="reply_like" property="replyLike" />
		<result column="change_name" property="changeName" />
		<result column="create_date" property="createDate" />
		<result column="status" property="status" />
	</resultMap>
	
	<select id="selectStroy" resultMap="storyResult">
		select
			   story_no
			 , nickname
			 , story_title
			 , a.create_date
			 , a.origin_name
			 , a.change_name "storyPath"
			 , reply_count
             , c.change_name "profilePath"
		  from a_story a
          join c_member c on (email = writer_email)
		 where a.status = 'Y'
		   and a.couple_code = #{ coupleCode }
		 order
		    by story_no desc
	</select>
	
	<insert id="insertStory">
		insert 
		  into a_story
		  (
		  	story_no
		  , couple_code
		  , writer_email
		  , story_title
		  , origin_name
		  , change_name
		  )
		  values
		  (
		  	seq_story.nextval
		  , #{ coupleCode }
		  , #{ writerEmail }
		  , #{ storyTitle }
		  , #{ originName }
		  , #{ changeName }
		  )
	
	</insert>
	
	<select id="selectReplyList" resultMap="replyResult">
		select
			   reply_no
			 , ref_sno
			 , nickname
			 , reply_content
			 , reply_like
			 , a.create_date
			 , c.change_name "change_name"
		  from a_reply a
		  join c_member c on(email = reply_writer)
		 where a.status = 'Y'
		   and ref_sno = #{ storyNo }
		 order
		    by reply_no asc
	</select>
	
	<delete id="deleteStory">
		delete 
		  from a_story
		 where story_no = #{ storyNo }
	</delete>
	
	<insert id="insertReply">
		insert 
		  into a_reply
		  (
		  	reply_no
		  , ref_sno
		  , reply_writer
		  , reply_content
		  )
		  values
		  (
		  	seq_reply.nextval
		  , #{ refStoryNo }
		  , #{ replyWriter }
		  , #{ replyContent }
		  )
	</insert>
	
	<update id="increaseReplyCount">
		update a_story
		   set reply_count = reply_count + 1
		 where story_no = #{ storyNo }
	</update>
	
	<update id="increaseReplyLike">
		update a_reply
		   set reply_like = reply_like + 1
		 where reply_no = #{ replyNo }
	</update>

</mapper>